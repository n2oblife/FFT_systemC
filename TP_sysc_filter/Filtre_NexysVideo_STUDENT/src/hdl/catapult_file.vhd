-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2022.2_1/1019737 Production Release
--  HLS Date:       Mon Nov 21 20:05:27 PST 2022
-- 
--  Generated by:   HLS_student@wifi-salsa-165.priv.enst-bretagne.fr
--  Generated date: Fri Jan 27 10:11:45 2023
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    top_level_FIR_FILTER
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;


ENTITY top_level_FIR_FILTER IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    data_in : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    valid_in : IN STD_LOGIC;
    coeffs_0 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_1 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_2 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_3 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_4 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_5 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_6 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_7 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_8 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_9 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_10 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_11 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_12 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_13 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_14 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_15 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    data_out : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
    valid_out : OUT STD_LOGIC
  );
END top_level_FIR_FILTER;

ARCHITECTURE v1 OF top_level_FIR_FILTER IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL while_if_slc_while_if_acc_sat_29_3 : STD_LOGIC;
  SIGNAL while_if_while_if_nor_3 : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL while_if_while_if_nor_4 : STD_LOGIC;
  SIGNAL or_dcpl_2 : STD_LOGIC;
  SIGNAL new_sample_wr_sva : STD_LOGIC;
  SIGNAL acc_sva_1 : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL while_land_lpi_1_dfm_1 : STD_LOGIC;
  SIGNAL while_land_lpi_1_dfm_st_1 : STD_LOGIC;
  SIGNAL while_stage_0_2 : STD_LOGIC;
  SIGNAL while_stage_0_3 : STD_LOGIC;
  SIGNAL while_land_lpi_1_dfm_st_2 : STD_LOGIC;
  SIGNAL while_else_land_lpi_1_dfm_st_2 : STD_LOGIC;
  SIGNAL while_if_acc_sat_sva_1 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL while_else_land_lpi_1_dfm_mx0w0 : STD_LOGIC;
  SIGNAL reg_while_else_land_lpi_1_dfm_cse : STD_LOGIC;
  SIGNAL or_cse : STD_LOGIC;
  SIGNAL taps_7_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_8_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_6_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_9_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_5_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_10_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_4_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_11_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_3_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_12_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_2_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_13_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_1_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_14_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL taps_0_sva : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL MAC_15_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_16_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_13_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_14_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_11_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_12_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_9_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_10_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_acc_18_itm_1 : STD_LOGIC_VECTOR (50 DOWNTO 0);
  SIGNAL MAC_7_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_8_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_5_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_6_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_3_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_4_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_1_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_2_mul_itm_1 : STD_LOGIC_VECTOR (47 DOWNTO 0);
  SIGNAL MAC_acc_itm_1 : STD_LOGIC_VECTOR (50 DOWNTO 0);
  SIGNAL valid_out_mx0c1 : STD_LOGIC;
  SIGNAL while_if_nor_ovfl_sva_1 : STD_LOGIC;
  SIGNAL while_if_and_unfl_sva_1 : STD_LOGIC;

  SIGNAL while_if_nor_3_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL while_if_and_nl : STD_LOGIC;
  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX_v_22_2_2(input_0 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(21 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  data_out <= while_if_slc_while_if_acc_sat_29_3 & while_if_while_if_nor_3 & while_if_while_if_nor_4;
  while_if_and_nl <= (acc_sva_1(22)) AND ((acc_sva_1(0)) OR (acc_sva_1(1)) OR (acc_sva_1(2))
      OR (acc_sva_1(3)) OR (acc_sva_1(4)) OR (acc_sva_1(5)) OR (acc_sva_1(6)) OR
      (acc_sva_1(7)) OR (acc_sva_1(8)) OR (acc_sva_1(9)) OR (acc_sva_1(10)) OR (acc_sva_1(11))
      OR (acc_sva_1(12)) OR (acc_sva_1(13)) OR (acc_sva_1(14)) OR (acc_sva_1(15))
      OR (acc_sva_1(16)) OR (acc_sva_1(17)) OR (acc_sva_1(18)) OR (acc_sva_1(19))
      OR (acc_sva_1(20)) OR (acc_sva_1(21)) OR (NOT (acc_sva_1(51))));
  while_if_acc_sat_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(acc_sva_1(51
      DOWNTO 23)), 29), 30) + CONV_SIGNED(CONV_UNSIGNED(while_if_and_nl, 1), 30),
      30));
  while_if_nor_ovfl_sva_1 <= NOT((while_if_acc_sat_sva_1(29)) OR (NOT(CONV_SL_1_1(while_if_acc_sat_sva_1(28
      DOWNTO 23)/=STD_LOGIC_VECTOR'("000000")))));
  while_if_and_unfl_sva_1 <= (while_if_acc_sat_sva_1(29)) AND (NOT(CONV_SL_1_1(while_if_acc_sat_sva_1(28
      DOWNTO 23)=STD_LOGIC_VECTOR'("111111"))));
  acc_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_acc_18_itm_1),
      51), 52) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_acc_itm_1), 51), 52), 52));
  while_land_lpi_1_dfm_1 <= valid_in AND (NOT new_sample_wr_sva);
  while_else_land_lpi_1_dfm_mx0w0 <= (NOT valid_in) AND new_sample_wr_sva;
  or_cse <= (NOT valid_in) OR new_sample_wr_sva;
  or_dcpl_2 <= NOT(while_stage_0_3 AND while_land_lpi_1_dfm_st_2);
  valid_out_mx0c1 <= while_stage_0_3 AND while_else_land_lpi_1_dfm_st_2 AND (NOT
      while_land_lpi_1_dfm_st_2);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        valid_out <= '0';
      ELSIF ( ((while_stage_0_3 AND while_land_lpi_1_dfm_st_2) OR valid_out_mx0c1)
          = '1' ) THEN
        valid_out <= NOT valid_out_mx0c1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( or_dcpl_2 = '0' ) THEN
        while_if_slc_while_if_acc_sat_29_3 <= while_if_acc_sat_sva_1(29);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( or_dcpl_2 = '0' ) THEN
        while_if_while_if_nor_3 <= NOT(MUX_v_22_2_2(while_if_nor_3_nl, STD_LOGIC_VECTOR'("1111111111111111111111"),
            while_if_and_unfl_sva_1));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( or_dcpl_2 = '0' ) THEN
        while_if_while_if_nor_4 <= NOT((NOT((while_if_acc_sat_sva_1(0)) OR while_if_nor_ovfl_sva_1))
            OR while_if_and_unfl_sva_1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        while_else_land_lpi_1_dfm_st_2 <= '0';
        while_land_lpi_1_dfm_st_2 <= '0';
        while_land_lpi_1_dfm_st_1 <= '0';
        new_sample_wr_sva <= '0';
        while_stage_0_2 <= '0';
        while_stage_0_3 <= '0';
        reg_while_else_land_lpi_1_dfm_cse <= '0';
      ELSE
        while_else_land_lpi_1_dfm_st_2 <= reg_while_else_land_lpi_1_dfm_cse;
        while_land_lpi_1_dfm_st_2 <= while_land_lpi_1_dfm_st_1;
        while_land_lpi_1_dfm_st_1 <= while_land_lpi_1_dfm_1;
        new_sample_wr_sva <= (new_sample_wr_sva AND (NOT while_else_land_lpi_1_dfm_mx0w0))
            OR while_land_lpi_1_dfm_1;
        while_stage_0_2 <= '1';
        while_stage_0_3 <= while_stage_0_2;
        reg_while_else_land_lpi_1_dfm_cse <= while_else_land_lpi_1_dfm_mx0w0;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      MAC_acc_18_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_11_mul_itm_1),
          48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_12_mul_itm_1), 48), 51) +
          CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_15_mul_itm_1), 48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_16_mul_itm_1),
          48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_13_mul_itm_1), 48), 51) +
          CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_14_mul_itm_1), 48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_9_mul_itm_1),
          48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_10_mul_itm_1), 48), 51),
          51));
      MAC_acc_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_3_mul_itm_1),
          48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_4_mul_itm_1), 48), 51) +
          CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_7_mul_itm_1), 48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_8_mul_itm_1),
          48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_5_mul_itm_1), 48), 51) +
          CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_6_mul_itm_1), 48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_1_mul_itm_1),
          48), 51) + CONV_SIGNED(CONV_SIGNED(SIGNED(MAC_2_mul_itm_1), 48), 51), 51));
      MAC_7_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_6) *
          SIGNED(taps_5_sva)), 48));
      MAC_8_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_7) *
          SIGNED(taps_6_sva)), 48));
      MAC_5_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_4) *
          SIGNED(taps_3_sva)), 48));
      MAC_6_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_5) *
          SIGNED(taps_4_sva)), 48));
      MAC_3_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_2) *
          SIGNED(taps_1_sva)), 48));
      MAC_4_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_3) *
          SIGNED(taps_2_sva)), 48));
      MAC_1_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_0) *
          SIGNED(data_in)), 48));
      MAC_2_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_1) *
          SIGNED(taps_0_sva)), 48));
      MAC_15_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_14)
          * SIGNED(taps_13_sva)), 48));
      MAC_16_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_15)
          * SIGNED(taps_14_sva)), 48));
      MAC_13_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_12)
          * SIGNED(taps_11_sva)), 48));
      MAC_14_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_13)
          * SIGNED(taps_12_sva)), 48));
      MAC_11_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_10)
          * SIGNED(taps_9_sva)), 48));
      MAC_12_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_11)
          * SIGNED(taps_10_sva)), 48));
      MAC_9_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_8) *
          SIGNED(taps_7_sva)), 48));
      MAC_10_mul_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(coeffs_9)
          * SIGNED(taps_8_sva)), 48));
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_0_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_0_sva <= data_in;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_2_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_2_sva <= taps_1_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_1_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_1_sva <= taps_0_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_4_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_4_sva <= taps_3_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_3_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_3_sva <= taps_2_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_6_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_6_sva <= taps_5_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_5_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_5_sva <= taps_4_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_8_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_8_sva <= taps_7_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_7_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_7_sva <= taps_6_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_10_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_10_sva <= taps_9_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_9_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_9_sva <= taps_8_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_12_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_12_sva <= taps_11_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_11_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_11_sva <= taps_10_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_14_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_14_sva <= taps_13_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        taps_13_sva <= STD_LOGIC_VECTOR'( "000000000000000000000000");
      ELSIF ( or_cse = '0' ) THEN
        taps_13_sva <= taps_12_sva;
      END IF;
    END IF;
  END PROCESS;
  while_if_nor_3_nl <= NOT(MUX_v_22_2_2((while_if_acc_sat_sva_1(22 DOWNTO 1)), STD_LOGIC_VECTOR'("1111111111111111111111"),
      while_if_nor_ovfl_sva_1));
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    top_level
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;


ENTITY top_level IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    data_in : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    valid_in : IN STD_LOGIC;
    coeffs_0 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_1 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_2 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_3 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_4 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_5 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_6 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_7 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_8 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_9 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_10 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_11 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_12 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_13 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_14 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    coeffs_15 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    data_out : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
    valid_out : OUT STD_LOGIC
  );
END top_level;

ARCHITECTURE v1 OF top_level IS
  -- Default Constants

  COMPONENT top_level_FIR_FILTER
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      data_in : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      valid_in : IN STD_LOGIC;
      coeffs_0 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_1 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_2 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_3 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_4 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_5 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_6 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_7 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_8 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_9 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_10 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_11 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_12 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_13 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_14 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      coeffs_15 : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      data_out : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
      valid_out : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL top_level_FIR_FILTER_inst_data_in : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_0 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_1 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_2 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_3 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_4 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_5 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_6 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_7 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_8 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_9 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_10 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_11 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_12 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_13 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_14 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_coeffs_15 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL top_level_FIR_FILTER_inst_data_out : STD_LOGIC_VECTOR (23 DOWNTO 0);

BEGIN
  top_level_FIR_FILTER_inst : top_level_FIR_FILTER
    PORT MAP(
      clk => clk,
      rst => rst,
      data_in => top_level_FIR_FILTER_inst_data_in,
      valid_in => valid_in,
      coeffs_0 => top_level_FIR_FILTER_inst_coeffs_0,
      coeffs_1 => top_level_FIR_FILTER_inst_coeffs_1,
      coeffs_2 => top_level_FIR_FILTER_inst_coeffs_2,
      coeffs_3 => top_level_FIR_FILTER_inst_coeffs_3,
      coeffs_4 => top_level_FIR_FILTER_inst_coeffs_4,
      coeffs_5 => top_level_FIR_FILTER_inst_coeffs_5,
      coeffs_6 => top_level_FIR_FILTER_inst_coeffs_6,
      coeffs_7 => top_level_FIR_FILTER_inst_coeffs_7,
      coeffs_8 => top_level_FIR_FILTER_inst_coeffs_8,
      coeffs_9 => top_level_FIR_FILTER_inst_coeffs_9,
      coeffs_10 => top_level_FIR_FILTER_inst_coeffs_10,
      coeffs_11 => top_level_FIR_FILTER_inst_coeffs_11,
      coeffs_12 => top_level_FIR_FILTER_inst_coeffs_12,
      coeffs_13 => top_level_FIR_FILTER_inst_coeffs_13,
      coeffs_14 => top_level_FIR_FILTER_inst_coeffs_14,
      coeffs_15 => top_level_FIR_FILTER_inst_coeffs_15,
      data_out => top_level_FIR_FILTER_inst_data_out,
      valid_out => valid_out
    );
  top_level_FIR_FILTER_inst_data_in <= data_in;
  top_level_FIR_FILTER_inst_coeffs_0 <= coeffs_0;
  top_level_FIR_FILTER_inst_coeffs_1 <= coeffs_1;
  top_level_FIR_FILTER_inst_coeffs_2 <= coeffs_2;
  top_level_FIR_FILTER_inst_coeffs_3 <= coeffs_3;
  top_level_FIR_FILTER_inst_coeffs_4 <= coeffs_4;
  top_level_FIR_FILTER_inst_coeffs_5 <= coeffs_5;
  top_level_FIR_FILTER_inst_coeffs_6 <= coeffs_6;
  top_level_FIR_FILTER_inst_coeffs_7 <= coeffs_7;
  top_level_FIR_FILTER_inst_coeffs_8 <= coeffs_8;
  top_level_FIR_FILTER_inst_coeffs_9 <= coeffs_9;
  top_level_FIR_FILTER_inst_coeffs_10 <= coeffs_10;
  top_level_FIR_FILTER_inst_coeffs_11 <= coeffs_11;
  top_level_FIR_FILTER_inst_coeffs_12 <= coeffs_12;
  top_level_FIR_FILTER_inst_coeffs_13 <= coeffs_13;
  top_level_FIR_FILTER_inst_coeffs_14 <= coeffs_14;
  top_level_FIR_FILTER_inst_coeffs_15 <= coeffs_15;
  data_out <= top_level_FIR_FILTER_inst_data_out;

END v1;




